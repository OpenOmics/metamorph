import json
import os, sys
from os.path import join
from os import listdir
from scripts.common import allocated, provided, references, str_bool, list_bool


# Global workflow variables
configfile: "config.json"  # Generated from user input and config/*.json

datapath                   = config["project"]["datapath"]
rna_datapath               = config["project"].get("rna_datapath", [])
workpath                   = config["project"]["workpath"]
tmpdir                     = config["options"]["tmp_dir"]
megahit_only               = bool(int(config["options"]["assembler_mode"]))
rna_included               = list_bool(config.get("rna", 'false'))
rna_sample_stems           = config.get("rna", [])
samples                    = config["samples"]

# DNA directories
top_assembly_dir           = join(workpath, config['project']['id'], "metawrap_assembly")
top_readqc_dir             = join(workpath, config['project']['id'], "metawrap_read_qc")
top_trim_dir               = join(workpath, config['project']['id'], "trimmed_reads")
top_refine_dir             = join(workpath, config['project']['id'], "metawrap_bin_refine")
top_tax_dir                = join(workpath, config['project']['id'], "metawrap_kmer")
top_binning_dir            = join(workpath, config['project']['id'], "metawrap_binning")
top_mags_dir               = join(workpath, config['project']['id'], "mags")
top_mapping_dir            = join(workpath, config['project']['id'], "humann3_dna")

# RNA directories
top_readqc_dir_rna         = join(workpath, config['project']['id'], "metawrap_read_qc_RNA")
top_trim_dir_rna           = join(workpath, config['project']['id'], "trimmed_reads_RNA")
top_map_dir_rna            = join(workpath, config['project']['id'], "mapping_RNA")
humann3_dir_rna            = join(workpath, config['project']['id'], "humann3_rna")

# Read in resource information, containing information about threads, mem, walltimes, etc.
# TODO: Add handler for when the mode is set to local.
with open(join(workpath, "config", "cluster.json")) as fh:
    cluster = json.load(fh)

start_r1 = expand(join(workpath, "dna", "{name}_R1.fastq.gz"), name=samples)
start_r2 = expand(join(workpath, "dna", "{name}_R2.fastq.gz"), name=samples)

if rna_included:
    start_r1_rna = expand(join(workpath, "rna", "{rname}_R1.fastq.gz"), rname=rna_sample_stems)
    start_r2_rna = expand(join(workpath, "rna", "{rname}_R2.fastq.gz"), rname=rna_sample_stems)
else:
    start_r1_rna, start_r2_rna = [], []

# Final ouput files of the pipeline
rule all:
    input:
        #################
        #  DNA outputs  #
        #################
        # dna read decompress
        # ~~~~~~~~~~~~~~~
        start_r1,
        start_r2,
        # read qc and filtering
        # ~~~~~~~~~~~~~~~
        expand(join(top_readqc_dir, "{name}", "{name}_R1_pretrim_report.html"), name=samples),
        expand(join(top_readqc_dir, "{name}", "{name}_R2_pretrim_report.html"), name=samples),
        expand(join(top_readqc_dir, "{name}", "{name}_R1_postrim_report.html"), name=samples),
        expand(join(top_readqc_dir, "{name}", "{name}_R2_postrim_report.html"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R1_trimmed.fastq.gz"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R2_trimmed.fastq.gz"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R1_trimmed.fastq.gz"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R2_trimmed.fastq.gz"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R1_dehost.fastq.gz"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R2_dehost.fastq.gz"), name=samples),            
        expand(join(top_mapping_dir, '{name}_genefamilies.tsv'), name=samples),
        expand(join(top_mapping_dir, '{name}_pathabundance.tsv'), name=samples),
        expand(join(top_mapping_dir, '{name}_pathcoverage.tsv'), name=samples),
        expand(join(top_mapping_dir, '{name}_bugs_list.tsv'),name=samples),
        join(top_mapping_dir, 'merged_bugs_list.tsv'),
        join(top_mapping_dir, 'merged_pathabundance.cpm.stratified.tsv'),
        join(top_mapping_dir, 'merged_pathabundance.cpm.unstratified.tsv'),
        join(top_mapping_dir, 'diversity_analysis','merged_bugs_list_shannon.tsv'),
        join(top_mapping_dir, 'diversity_analysis','merged_bugs_list_richness.tsv'),
        join(top_mapping_dir, 'diversity_analysis','merged_bugs_list_jaccard.tsv'),
        join(top_mapping_dir, 'diversity_analysis','merged_bugs_list_weighted-unifrac.tsv'),
        join(top_mapping_dir, 'diversity_analysis','merged_bugs_list_unweighted-unifrac.tsv'),
        expand(join(top_trim_dir, "{name}", "{name}_R1_dehost.fastq"), name=samples),
        expand(join(top_trim_dir, "{name}", "{name}_R2_dehost.fastq"), name=samples),
        #################
        #  RNA outputs  #
        #################
        # rna read decompress
        # ~~~~~~~~~~~~~~~
        start_r1_rna,
        start_r2_rna,
        # read qc and filtering
        # ~~~~~~~~~~~~~~~
        expand(join(top_readqc_dir_rna, "{name}", "{name}_R1_pretrim_report.html"), name=rna_sample_stems),
        expand(join(top_readqc_dir_rna, "{name}", "{name}_R2_pretrim_report.html"), name=rna_sample_stems),
        expand(join(top_readqc_dir_rna, "{name}", "{name}_R1_postrim_report.html"), name=rna_sample_stems),
        expand(join(top_readqc_dir_rna, "{name}", "{name}_R2_postrim_report.html"), name=rna_sample_stems),
        expand(join(top_trim_dir_rna, "{name}", "{name}_R1_trimmed.fastq"), name=rna_sample_stems),
        expand(join(top_trim_dir_rna, "{name}", "{name}_R2_trimmed.fastq"), name=rna_sample_stems),
        expand(join(top_trim_dir_rna, "{name}", "{name}_R1_trimmed.fastq.gz"), name=rna_sample_stems),
        expand(join(top_trim_dir_rna, "{name}", "{name}_R2_trimmed.fastq.gz"), name=rna_sample_stems),
        expand(join(top_trim_dir_rna, "{name}", "{name}_R1_dehost.fastq.gz"), name=rna_sample_stems),
        expand(join(top_trim_dir_rna, "{name}", "{name}_R2_dehost.fastq.gz"), name=rna_sample_stems),
        expand(join(humann3_dir_rna, '{name}_genefamilies.tsv'), name=rna_sample_stems),
        expand(join(humann3_dir_rna, '{name}_pathabundance.tsv'), name=rna_sample_stems),
        expand(join(humann3_dir_rna, '{name}_pathcoverage.tsv'), name=rna_sample_stems),
        join(humann3_dir_rna, 'merged_pathabundance.cpm.stratified.rna.tsv'),
        join(humann3_dir_rna, 'merged_pathabundance.cpm.unstratified.rna.tsv'),

# Import rules
include: join("rules", "DNA.smk")
include: join("rules", "RNA.smk")
include: join("rules", "hooks.smk")
